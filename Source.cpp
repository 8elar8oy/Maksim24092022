#include <iostream>
using namespace std;
int main() {
	setlocale(LC_ALL, "russian");
	//Boolean1◦.Дано целое число A.
	//Проверить истинность высказывания : «Число A является положительным».
	/*int A;
	cin >> A;
	bool res;
	res = A > 0;
	cout << boolalpha << res << endl;*/
	//Boolean2◦.Дано целое число A.Проверить истинность высказывания : «Число A является нечетным».
	/*int A;
	cin >> A;
	bool res;
	res = A%2!=0;
	cout << boolalpha << res << endl;*/
	//Boolean3◦.Дано целое число A.Проверить истинность высказывания : «Число A является четным».
	/*int A;
	cin >> A;
	bool res;
	res = A%2==0;
	cout << boolalpha << res << endl;*/
	//Boolean4◦.Даны два целых числа : A, B.Проверить истинность высказывания :
	//«Справедливы неравенства A > 2 и B ≤ 3».
	/*int A,B;
	cin >> A;
	cin >> B;
	bool res;
	res = A > 2 && B <= 3;
	cout << boolalpha << res << endl;*/
	//Boolean5◦.Даны два целых числа : A, B.Проверить истинность высказывания :
	//«Справедливы неравенства A ≥ 0 или B < −2».
	/*int A, B;
	cin >> A;
	cin >> B;
	bool res;
	res = A >= 0 || B < -2;
	cout << boolalpha << res << endl;*/
	//Boolean6◦.Даны три целых числа : A, B, C.Проверить истинность высказывания : «Справедливо двойное неравенство A < B < C».
	/*int A, B, C;
	cin >> A;
	cin >> B;
	cin >> C;
	bool res;
	res = A < B && B < C;
	cout << boolalpha << res << endl;*/
	//Boolean7◦.Даны три целых числа : A, B, C.Проверить истинность высказывания : «Число B находится между числами A и C».
	/*int A, B, C;
	cin >> A;
	cin >> B;
	cin >> C;
	bool res;
	res = A < B || A > B && B < C || B > C;
	cout << boolalpha << res << endl;*/
	//Boolean8◦.Даны два целых числа : A, B.Проверить истинность высказывания :
	//«Каждое из чисел A и B нечетное».
	/*int A, B;
	bool res;
	cin >> A >> B;
	res = A % 2 != 0 && B % 2 != 0;
	cout << boolalpha << res << endl;*/
	
	//Boolean9◦.Даны два целых числа : A, B.Проверить истинность высказывания :
	//«Хотя бы одно из чисел A и B нечетное».
	/*int A, B;
	bool res;
	cin >> A >> B;
	res = (A % 2 != 0 ) || (B % 2 != 0);
	cout << boolalpha << res << endl;*/
	//Boolean10◦.Даны два целых числа : A, B.Проверить истинность высказывания : «Ровно одно из чисел A и B нечетное».
	/*int A, B;
	bool res;
	cin >> A >> B;
	res = (A % 2 != 0 && B % 2 == 0) || (A % 2 == 0 && B % 2 != 0);
	cout << boolalpha << res << endl;*/
	//Boolean11◦.Даны два целых числа : A, B.Проверить истинность высказывания : «Числа A и B имеют одинаковую четность».
	/*int A, B;
	bool res;
	cin >> A >> B;
	res = (A % 2 != 0 && B % 2 != 0) || (A % 2 == 0 && B % 2 == 0);
	cout << boolalpha << res << endl;*/
	//Boolean12◦.Даны три целых числа : A, B, C.Проверить истинность высказывания : «Каждое из чисел A, B, C положительное».
	/*int A, B, C;
	bool res;
	cin >> A >> B >> C;
	res = (A % 2 != 0 && B % 2 != 0) || (A % 2 == 0 && B % 2 == 0);
	cout << boolalpha << res << endl;*/
	//Boolean13◦.Даны три целых числа : A, B, C.Проверить истинность высказывания : «Хотя бы одно из чисел A, B, C положительное».
	/*int A, B, C;
	bool res;
	cin >> A >> B >> C;
	res = (A > 0 || B > 0 || C > 0);
	cout << boolalpha << res << endl;*/
	//Boolean14◦.Даны три целых числа : A, B, C.Проверить истинность высказывания : «Ровно одно из чисел A, B, C положительное».
	/*int A, B, C;
	bool res;
	cin >> A >> B >> C;
	res = (A > 0 && B < 0 && C < 0) || (A < 0 && B > 0 && C < 0) || (A < 0 && B < 0 && C > 0);
	cout << boolalpha << res << endl;*/
	//Boolean15◦.Даны три целых числа : A, B, C.Проверить истинность высказывания : «Ровно два из чисел A, B, C являются положительными».
	/*int A, B, C;
	bool res;
	cin >> A >> B >> C;
	res = (A > 0 && B > 0 && C < 0) || (A < 0 && B > 0 && C > 0) || (A > 0 && B < 0 && C > 0);
	cout << boolalpha << res << endl;*/
	//Boolean16◦
	/*Дано целое положительное число.Проверить истинность высказывания : «Данное число является четным двузначным».*/
	/*int A;
	bool res;
	cin >> A;
	res = ((A >= 10 && A < 100) && A % 2 == 0);
	cout << boolalpha << res << endl;*/
	//Boolean17◦
	//.Дано целое положительное число.Проверить истинность высказывания : «Данное число является нечетным трехзначным».
	/*int A;
	bool res;
	cin >> A;
	res = (( A >= 100 && A < 1000)  && A % 2 != 0);
	cout << boolalpha << res << endl;*/
	//Boolean18◦
	//.Проверить истинность высказывания : «Среди трех данных целых
	//чисел есть хотя бы одна пара совпадающих».
	/*int A, B, C;
	bool res;
	cin >> A >> B >> C;
	res = (A == B || A == C || B == C);
	cout << boolalpha << res << endl;*/
	
	//Boolean19◦
	//.Проверить истинность высказывания : «Среди трех данных целых
	//чисел есть хотя бы одна пара взаимно противоположных».
	int A, B, C;
	bool res;
	cin >> A >> B >> C;
	res = (A == -B || A == -C || B == -A || B == -C || C == -A || C == -B );
	cout << boolalpha << res << endl;
	//Boolean20◦
	//.Дано трехзначное число.Проверить истинность высказывания :
	//«Все цифры данного числа различны».
	
	//Boolean21◦
	//.Дано трехзначное число.Проверить истинность высказывания :
	//«Цифры данного числа образуют возрастающую последовательность».
	
	//Boolean22◦
	//.Дано трехзначное число.Проверить истинность высказывания :
	//«Цифры данного числа образуют возрастающую или убывающую последовательность».
} 